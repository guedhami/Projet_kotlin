// Generated by Dagger (https://dagger.dev).
package com.example.todolist.di;

import com.example.todolist.repository.DefaultTaskRepository;
import com.example.todolist.repository.TaskRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DefaultRepositoryModule_ProvideRepositoryFactory implements Factory<TaskRepository> {
  private final DefaultRepositoryModule module;

  private final Provider<DefaultTaskRepository> repositoryProvider;

  public DefaultRepositoryModule_ProvideRepositoryFactory(DefaultRepositoryModule module,
      Provider<DefaultTaskRepository> repositoryProvider) {
    this.module = module;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public TaskRepository get() {
    return provideRepository(module, repositoryProvider.get());
  }

  public static DefaultRepositoryModule_ProvideRepositoryFactory create(
      DefaultRepositoryModule module, Provider<DefaultTaskRepository> repositoryProvider) {
    return new DefaultRepositoryModule_ProvideRepositoryFactory(module, repositoryProvider);
  }

  public static TaskRepository provideRepository(DefaultRepositoryModule instance,
      DefaultTaskRepository repository) {
    return Preconditions.checkNotNullFromProvides(instance.provideRepository(repository));
  }
}
