// Generated by view binder compiler. Do not edit!
package com.example.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.todolist.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTaskListBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton addNewTask;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbarLayout;

  @NonNull
  public final TextView doneTasks;

  @NonNull
  public final TextView newTaskTextview;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final ImageButton showDoneTasks;

  @NonNull
  public final SwipeRefreshLayout swiperefresh;

  @NonNull
  public final NestedScrollView taskListNestedScrollView;

  @NonNull
  public final MaterialToolbar topAppBar;

  private FragmentTaskListBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton addNewTask, @NonNull AppBarLayout appBarLayout,
      @NonNull CollapsingToolbarLayout collapsingToolbarLayout, @NonNull TextView doneTasks,
      @NonNull TextView newTaskTextview, @NonNull RecyclerView recyclerView,
      @NonNull ImageButton showDoneTasks, @NonNull SwipeRefreshLayout swiperefresh,
      @NonNull NestedScrollView taskListNestedScrollView, @NonNull MaterialToolbar topAppBar) {
    this.rootView = rootView;
    this.addNewTask = addNewTask;
    this.appBarLayout = appBarLayout;
    this.collapsingToolbarLayout = collapsingToolbarLayout;
    this.doneTasks = doneTasks;
    this.newTaskTextview = newTaskTextview;
    this.recyclerView = recyclerView;
    this.showDoneTasks = showDoneTasks;
    this.swiperefresh = swiperefresh;
    this.taskListNestedScrollView = taskListNestedScrollView;
    this.topAppBar = topAppBar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTaskListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTaskListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_task_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTaskListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_new_task;
      FloatingActionButton addNewTask = ViewBindings.findChildViewById(rootView, id);
      if (addNewTask == null) {
        break missingId;
      }

      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.collapsingToolbarLayout;
      CollapsingToolbarLayout collapsingToolbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbarLayout == null) {
        break missingId;
      }

      id = R.id.done_tasks;
      TextView doneTasks = ViewBindings.findChildViewById(rootView, id);
      if (doneTasks == null) {
        break missingId;
      }

      id = R.id.new_task_textview;
      TextView newTaskTextview = ViewBindings.findChildViewById(rootView, id);
      if (newTaskTextview == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.show_done_tasks;
      ImageButton showDoneTasks = ViewBindings.findChildViewById(rootView, id);
      if (showDoneTasks == null) {
        break missingId;
      }

      id = R.id.swiperefresh;
      SwipeRefreshLayout swiperefresh = ViewBindings.findChildViewById(rootView, id);
      if (swiperefresh == null) {
        break missingId;
      }

      id = R.id.task_list_nested_scroll_view;
      NestedScrollView taskListNestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (taskListNestedScrollView == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      return new FragmentTaskListBinding((CoordinatorLayout) rootView, addNewTask, appBarLayout,
          collapsingToolbarLayout, doneTasks, newTaskTextview, recyclerView, showDoneTasks,
          swiperefresh, taskListNestedScrollView, topAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
